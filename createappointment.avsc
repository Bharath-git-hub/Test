{
  "type": "record",
  "name": "createAppointmentCommand",
  "namespace": "node.yardmgmt.appointment.commands",
  "doc": "when another capability (logistics, inboundplanning,...) demands to create an appointment, Yard capability is able to do so, en broadcasts the event.\n\n",
  "fields": [
    {
      "name": "Command_Header",
      "type": {
        "type": "record",
        "name": "Command_Header",
        "fields": [
          {
            "name": "COMMAND_TYPE",
            "type": "string",
            "doc": "Actual type of the message, i.e., of the event, query, query response, command or command response.\nUniquely identifies the actual message type on the topic on which the message is published.\nThe event_type describes the action that happened (eg. AppointmentCancelled), with the exception of the upserted-events.  The upserted or integration events communicate the latest state of a domain-entity or even an entire portion of a domain.\n"
          },
          {
            "name": "COMMAND_TIMESTAMP",
            "type": "string",
            "doc": "(Technical) Message publication timestamp, indicating  when the message was published by its producer.\nThis is not necessarily the same as the default message timestamp that is part of every Kafka message. The latter can represent the ingestion or publication time (configurable); the point in time when the message is stored in a topic partition by the Kafka broker.\nFurthermore, this timestamp may also deviate from the functional (e.g., event/data modification/...) time. This happens when there is some delay between the functional moment and the technical publication (e.g., due to technical delays, or due to delayed data registration). If this is possible, the functional (event) time should be separately added to the message payload."
          },
          {
            "name": "COMMAND_TIMEZONE",
            "type": "string",
            "doc": "Timezone abbreviation:\neg : EVENT_TIMEZONE = \"UTCâˆ’10:00\"\nexpressed as an offset against UTC time\nsee also:\nhttps://en.wikipedia.org/wiki/List_of_time_zone_abbreviations"
          },
          {
            "name": "COMMAND_ID",
            "type": "string",
            "doc": "(Technical) Message ID that can be used by the producer and consumers to refer to this message (e.g., in logs or other events)."
          },
          {
            "name": "COMMAND_SOURCE_CODE",
            "type": "string",
            "doc": "the domain that produced this command"
          },
          {
            "name": "COMMAND_CORRELATION_ID",
            "type": "string",
            "doc": "Mandatory for commands, this correlation ID is used in the response message so the commander can link response to command.\nThis reference uses the (Technical) Message ID."
          },
          {
            "name": "COMMAND_DISTRIBUTION_CENTER_CODE",
            "type": "string",
            "doc": "The name/id of the Node Warehouse/Delivery Center of the commander"
          },
          {
            "name": "COMMAND_TECHNICAL_SOLUTION_SOURCE_CODE",
            "type": "string",
            "doc": "Technical system that produced the command"
          }
        ]
      }
    },
    {
      "name": "distributionCenterCd",
      "type": {
        "type": "enum",
        "name": "distributionCenterCd",
        "symbols": [
          "NODE_1064",
          "NODE_1065",
          "NODE_1067"
        ]
      }
    },
    {
      "name": "appointmentType",
      "type": {
        "type": "enum",
        "name": "appointmentType",
        "symbols": [
          "LIVE_UNLOAD",
          "LIVE_LOAD",
          "DROP_UNLOAD",
          "DROP_EMPTY",
          "PICKUP_EMPTY",
          "PICKUP_LOAD"
        ]
      }
    },
    {
      "name": "appointmentContentType",
      "type": {
        "type": "enum",
        "name": "appointmentContentType",
        "symbols": [
          "EMPTY",
          "SHIPMENTS",
          "INBOUNDDELIVERIES",
          "PURCHASEORDERS"
        ]
      }
    },
    {
      "name": "carrierId",
      "type": "string"
    },
    {
      "name": "transportholderId",
      "type": [
        "null",
        "string"
      ],
      "default": null
    },
    {
      "name": "transportholderEquipmentDesc",
      "type": [
        "null",
        {
          "type": "enum",
          "name": "transportholderEquipmentDesc",
          "symbols": [
            "CONTAINER",
            "RAIL_CAR",
            "TRACTOR",
            "TRAILER",
            "WAREHOUSE_VEHICLE"
          ]
        }
      ],
      "default": null
    },
    {
      "name": "requestedTmst",
      "type": "string",
      "doc": "the expected time that the carrier needs to check in at the gate"
    },
    {
      "name": "nodeoutboundshipmentId",
      "type": [
        "null",
        "string"
      ],
      "doc": "if the command is called from outboundplanning, this identifier is supplied",
      "default": null
    },
    {
      "name": "inbounddeliveryId",
      "type": [
        "null",
        "string"
      ],
      "doc": "if the command is called from inboundplanning, this identifier is supplied",
      "default": null
    },
    {
      "name": "earliestTmst",
      "type": [
        "null",
        "string"
      ],
      "doc": "the expected time that the carrier needs to check in at the gate",
      "default": null
    },
    {
      "name": "latestTmst",
      "type": [
        "null",
        "string"
      ],
      "doc": "the expected time that the carrier needs to check in at the gate",
      "default": null
    },
    {
      "name": "executionTmst",
      "type": "string"
    },
    {
      "name": "executorUserId",
      "type": "string"
    }
  ]
}